{"total":3,"pageSize":10,"pageCount":1,"data":[{"title":"做一个职业运维人","slug":"做一个职业运维人","date":"2018-01-17T11:37:00.000Z","updated":"2018-01-17T11:37:43.000Z","comments":true,"path":"api/articles/做一个职业运维人.json","excerpt":"","keywords":null,"cover":null,"content":"<p>很多三四年工作经验的同学，因为缺少必要的职业素养的培训，工作的方式方法或多或少存在一些问题，这影响了自身的职业发展。怎么做才算是会工作，这里有几点不成熟的建议，供诸君参考。</p>\n<p><strong>搞清楚公司为什么聘请你</strong></p>\n<p>公司不是慈善机构，而是以营利为目的，公司聘请你，就是为了让你帮助公司去营利，帮助公司解决问题。所以，如果觉得自己在公司没啥用处，有你没你没区别，那就离解聘不远了。</p>\n<p><strong>不断升职加薪的秘诀</strong></p>\n<p>要不断有产出，变成稀缺人才。要想明白自己可以帮公司解决什么问题，帮领导解决什么问题。并不遗余力的去拼搏，相信我，领导看得见你的付出。某些事情你可以做，别人做不了，领导把事情交到你这他放心，你就离加薪不远了，多次如此，就离升职不远了。</p>\n<p><strong>把握好跟领导的关系</strong></p>\n<p>从某种程度上讲，你其实不是在为公司打工，而是在为你的直属上司打工。所以，跟领导的关系尽量不要搞砸了，领导说的对的，要全力支持；做的不合理的，要<strong>私下</strong>跟领导沟通，用委婉的方式帮他指出问题所在。如果很不幸，你的领导刚愎自用，听不进谏言，那我只能说，良禽择木而栖。</p>\n<p><strong>把握好跟同事的关系</strong></p>\n<p>由于每个人的认知不同，背景知识不同，经验不同，在同一件事情上面的看法会不同，这将是常态。本着理不辨不明的原则，凡事沟通解决，对事不对人，注意表达语气。在这个团体作战的年代，如果你不合群，也会让你的领导难办。只要结果是好的，忍让一下又何妨。</p>\n<p><strong>不断提升自身的软素质</strong></p>\n<p>在职业生涯前期，专业技术能力是推升你往上走的主要动力，职业生涯中期，软素质就会显得尤为重要，职业生涯后期，人格魅力和影响力是不可或缺的。</p>\n<p><strong>蓝图规划、目标拆解、关键路径、过程管理</strong></p>\n<p>如果只是低头走路，不抬头看方向，容易迷失。工作也是一样，作为员工，要去了解公司战略，部门蓝图，做为领导，要去传达公司战略，部门蓝图，这样，整个团队才知道往哪使劲。把公司目标拆成部门目标，把部门目标拆成团队目标，最后拆成个人目标，了解这些，工作方向才能比较清晰。为了达成目标，我们制定了关键路径，项目、任务都是为目标服务的。老板要你写周报，要你经常汇报，实际就是在做过程管理，怕出意外~</p>\n<p><strong>知道方向了要低头看路</strong></p>\n<p>我们有理想，知道最佳实践，但要想真正落地，还需要知道现状，知道从现实走向理想的路。脱离一线的高层容易活在理想里，我们作为干活的人，却不能靠理想，靠方法论活着，制定出这条路，然后将路的走法同步给你的老板，得到老板的认可，坚定的沿着这条路走下去，才能最终达成目标。</p>\n<p><strong>念念不忘必有回响</strong></p>\n<p>全身心的投入，你会发现自己的能量超乎想象。不知道大家有没有这样的经历，工作中遇到一个问题，百思不得其解，然后你走着想，做着想，吃饭想，睡前想，然后某天早上醒来，灵光乍现，得出一完美方案。忍不住都要为自己的聪明才智鼓鼓掌，这就是念念不忘必有回响。老天眷顾努力的人。</p>\n<p><strong>过程中要及时反馈，经常汇报</strong></p>\n<p>工作中，我们要想领导之所想，老板把任务拆解好了，跟大伙制定了达成目标的关键路径，手下人去干活了，接下来老板会关注什么？显然，老板想知道各位干得如何了，是否遇到难点，出现意外，影响项目进展，已经做了哪些，还差哪些……所以，及时反馈，经常汇报是很有必要滴，老板会觉得你很上进，很积极。但老是拿个PPT去给老板讲，很不系统化，也不便于老板跟踪，一个良好的项目管理工具是很有必要的。</p>\n","text":"很多三四年工作经验的同学，因为缺少必要的职业素养的培训，工作的方式方法或多或少存在一些问题，这影响了自身的职业发展。怎么做才算是会工作，这里有几点不成熟的建议，供诸君参考。搞清楚公司为什么聘请你公司不是慈善机构，而是以营利为目的，公司聘请你，就是为了让你帮助公司去营利，帮助公司解","link":"","raw":null,"photos":[],"categories":[{"name":"职业规划","slug":"职业规划","count":1,"path":"api/categories/职业规划.json"}],"tags":[]},{"title":"运维蓝图思考","slug":"运维蓝图思考","date":"2018-01-17T07:24:08.000Z","updated":"2018-01-17T11:42:53.000Z","comments":true,"path":"api/articles/运维蓝图思考.json","excerpt":"","keywords":null,"cover":"https://upload-images.jianshu.io/upload_images/220367-618e19de8a48b7e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700","content":"<p>最近在做17年规划，思考运维到底应该干哪些事，得出如下图表一张，欢迎各位同仁一起讨论</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/220367-618e19de8a48b7e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700\" alt=\"\"></p>\n<p>运维蓝图</p>\n<h4 id=\"定标准\"><a href=\"#定标准\" class=\"headerlink\" title=\"* 定标准\"></a>* 定标准</h4><p>我们希望线上环境是统一的、干净的、规范的，所以就要定标准，比如：</p>\n<ul>\n<li><p>机型：线上机型尽量少，省得光各种机型的备机就一大堆，浪费成本，针对少量机型做精，稳定性也更容易做</p>\n</li>\n<li><p>OS：比如统一CentOS7.2 1511，统一kernel，统一各种优化配置，更安全，更稳定</p>\n</li>\n<li><p>第三方软件：比如MySQL、Tomcat、Nginx，尽量统一版本，统一扩展，统一部署方式，统一监控方式</p>\n</li>\n<li><p>发布标准：比如启停脚本，启动账号，LOG格式、切分方式，部署路径，watchdog</p>\n</li>\n<li><p>监控标准：制定指标黄页，机器、网络、业务程序、中间件等等都要如何监控，程序如何吐出反应自身健康状况的指标均要定规范</p>\n</li>\n</ul>\n<h4 id=\"资源管理\"><a href=\"#资源管理\" class=\"headerlink\" title=\"* 资源管理\"></a>* 资源管理</h4><p>运维作为一个支撑性的部门，没办法赚钱，但可以省钱，把资源尽量合理利用起来，花更少的钱办更多的事</p>\n<ul>\n<li><p>做好预算，容量规划，看业务增量得出预算机器量</p>\n</li>\n<li><p>各种机型需要备机配比，避免某机器坏了之后找不到备机可换</p>\n</li>\n<li><p>机器生命周期管理，流转流程，比如上线，下线，故障，借用等等</p>\n</li>\n<li><p>通过类似服务树这样的系统，分门别类的管理机器，知道每个机器的用途</p>\n</li>\n<li><p>通过类似Borg这样的统一调度系统，混部服务，提升资源利用率</p>\n</li>\n</ul>\n<h4 id=\"监控\"><a href=\"#监控\" class=\"headerlink\" title=\"* 监控\"></a>* 监控</h4><p>监控作为运维的眼睛，稳定性的必要保障，必须要做好，做全面，做稳定，所有服务都挂了，监控不能挂</p>\n<ul>\n<li><p>监控系统自身构建，监控数据量比较大，是运维系统中一个非常有难度的系统，可以参考的比如Borgmon、Gorilla、OpenTSDB、Open-Falcon等等</p>\n</li>\n<li><p>机器性能监控、基础环境监控、日志监控、网络监控、访问质量监控、业务监控，等等等等，没有最全，只有更全</p>\n</li>\n<li><p>部分问题报警之后，处理步骤是重复的固化的，这样的场景可以考虑故障自愈，无人值守自动处理，即使无法自动处理，也可以自动抓现场，提供后续分析依据</p>\n</li>\n</ul>\n<h4 id=\"安全\"><a href=\"#安全\" class=\"headerlink\" title=\"* 安全\"></a>* 安全</h4><p>所谓安全无小事，安全直接关系到一个公司的存亡，有的公司会把安全团队放到运维部门下面，有的是单拎出来，不管组织结构怎么划分，安全都是运维一定要重点关注的</p>\n<ul>\n<li><p>登录控制和操作审计，比如各个公司做的堡垒机、跳板机，控制哪些人可以登录哪些机器，而且所有操作均有记录，均可审计</p>\n</li>\n<li><p>安全接入，比如防DDOS，流量清洗，在公司所有服务之前，放置一道让人信赖的长城</p>\n</li>\n<li><p>服务安全，比如研发同学使用统一的框架，避免一些编码上的安全漏洞，再经常做一下漏洞扫描，扫扫更健康</p>\n</li>\n</ul>\n<h4 id=\"灾难管理\"><a href=\"#灾难管理\" class=\"headerlink\" title=\"* 灾难管理\"></a>* 灾难管理</h4><p>线上服务稳定性是运维同学的第一要务，灾难管理，是其中重要一环</p>\n<ul>\n<li><p>首先服务架构本身，上线之前就要考虑好怎么做容灾，有单点的系统显然是过不了准入的，运维同学不能接</p>\n</li>\n<li><p>重要数据必须做好备份，只备份没演练可能会步了gitlab的后尘，所以定期演练必不可少，另外提前找好擅长数据恢复的伙伴，省得临时抱佛脚</p>\n</li>\n<li><p>线上所有变更操作，故障处理，需求处理都要有完善的SOP，新人来了，看着SOP，就可以搞定</p>\n</li>\n<li><p>宕机演练，定期巡检要常做，预料外的故障是我们最不希望看到的</p>\n</li>\n</ul>\n<h4 id=\"访问质量\"><a href=\"#访问质量\" class=\"headerlink\" title=\"* 访问质量\"></a>* 访问质量</h4><p>公司做的业务如果是To C的，这块就重要了，互联网客户都没多少耐心，不要让客户感觉网站响应慢，这会直接导致客户流失</p>\n<ul>\n<li><p>访问质量要做全国甚至全球监控，各个省市，各个主要链路，搞个大屏，全国用户访问质量清晰可见</p>\n</li>\n<li><p>通过CDN，图片优化，缓存策略，流量调度等等手段，让网站访问速度变成与友商竞争的一大优势</p>\n</li>\n</ul>\n<h4 id=\"变更管理\"><a href=\"#变更管理\" class=\"headerlink\" title=\"* 变更管理\"></a>* 变更管理</h4><p>对线上做变更，是导致线上问题的一大源头，这块要单独拎出来说说</p>\n<ul>\n<li><p>系统组交付机器之后，首先要根据自身业务特点做一次初始化，对操作系统做一些配置，安装一些必要的软件，比如机器挂载到服务树自动触发初始化策略</p>\n</li>\n<li><p>大点的公司，每天几千次发布很正常，有个部署平台很重要，历史版本要可回溯，一键回滚，支持各种策略各种并发度上线，具备分发大文件到几万甚至几十万台机器的能力</p>\n</li>\n<li><p>关联关系类型的配置可以采用统一的名字服务解决，开关类的配置可以采用中心化配置中心或者采用一次发布解决，每个程序如果都支持reload配置倒是不错</p>\n</li>\n</ul>\n<h4 id=\"编程框架\"><a href=\"#编程框架\" class=\"headerlink\" title=\"* 编程框架\"></a>* 编程框架</h4><p>编程框架好像跟运维无关，实则不然。统一的编程框架会让运维复杂度降低，还可以在框架中嵌入运维逻辑，不考虑运维的架构师不是好架构师</p>\n<ul>\n<li><p>统一RPC框架，统一重试策略，统一名字服务，统一配置管理，统一watchdog，统一监控方式，统一日志打印…</p>\n</li>\n<li><p>多环境支持：开发环境，单测环境，集测环境，小流量环境，线上环境…用同一个发布包上线，搞定配置不同的问题</p>\n</li>\n<li><p>服务治理方面，比如接口权限控制，接口版本管理，流控，路由规则，等等</p>\n</li>\n</ul>\n<h4 id=\"自动化平台\"><a href=\"#自动化平台\" class=\"headerlink\" title=\"* 自动化平台\"></a>* 自动化平台</h4><p>运维这个行当，不是一个console一个pssh就万事大吉的，也需要相关系统的支持，提高工作效率，提高稳定性</p>\n<ul>\n<li><p>发布之前：版本管理系统，比如gitlab、编译打包平台、制品管理仓库</p>\n</li>\n<li><p>发布中：机器管理分组系统，部署系统，大文件分发工具</p>\n</li>\n<li><p>发布之后：监控系统，资源利用率平台</p>\n</li>\n<li><p>日常工作：初始化平台来初始化操作系统，跳板机、堡垒机控制登录，工单系统等等</p>\n</li>\n</ul>\n<h4 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"* 结语\"></a>* 结语</h4><p>如果一个公司注重服务稳定性、安全性，注重成本控制，那就应该注重运维，这群默默工作在服务背后的背锅侠，请珍惜！</p>\n","text":"最近在做17年规划，思考运维到底应该干哪些事，得出如下图表一张，欢迎各位同仁一起讨论 [Figure] 运维蓝图* 定标准我们希望线上环境是统一的、干净的、规范的，所以就要定标准，比如：机型：线上机型尽量少，省得光各种机型的备机就一大堆，浪费成本，针对少量机型做精，稳定性也更容易","link":"","raw":null,"photos":[],"categories":[{"name":"运维","slug":"运维","count":1,"path":"api/categories/运维.json"}],"tags":[]},{"title":"hexo 基本操作","slug":"hexo","date":"2018-01-16T13:36:08.000Z","updated":"2018-01-16T15:13:48.000Z","comments":true,"path":"api/articles/hexo.json","excerpt":"","keywords":null,"cover":null,"content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ","link":"","raw":null,"photos":[],"categories":[],"tags":[]}]}